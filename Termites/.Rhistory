########################################################################
#TBI Serengeti - Anders Masters
#Anders Sundsdal
#########################################################################
rm(list=ls())
library(lattice)
library(MASS)
library(ggplot2)
library(lme4)
library(ggplot2)
library(glmmTMB)
library(glmmADMB)
setwd("C:\Users\ansun\Google Drive\Skole\Master\Data\AfricanBioServices-Vegetation-and-soils\Termites")
setwd("C:/Users/ansun/Google Drive/Skole/Master/Data/AfricanBioServices-Vegetation-and-soils/Termites")
library(gdata)
install.packages("gdata")
library(gdata)
wsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
wsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
dsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=2) #Dryseason data
wsdata = read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
?read.xls
wsdata = read.xls("Termites/Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
wsdata = read.xls("C:/Users/ansun/Google Drive/Skole/Master/Data/AfricanBioServices-Vegetation-and-soils/Termites/Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
setwd("C:/Users/ansun/Google Drive/Skole/Master/Data/AfricanBioServices-Vegetation-and-soils/Termites")
wsdata = read.xls("Termites/Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
wsdata = read.xlsx("Termites/Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
library(gdata)
wsdata = read.xls("Termites/Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
dsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=2) #Dryseason data
wsdata = read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
head(wsdata)
wsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
head(wsdata)
setwd("C:/Users/ansun/Google Drive/Skole/Master/Data/AfricanBioServices-Vegetation-and-soils/Termites")
wsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
dsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=2) #Dryseason data
wsdata
View(dsdata)
View(dsdata)
View(wsdata)
View(wsdata)
head(wsdata)
dim(wsdata) # 880  37
str(decomp1)
str(wsdata)
names(wsdata)
#NB! NEEDED TO INSTALL ACTIVEPERL: https://www.activestate.com/activeperl/downloads, TO BE ABLE TO READ THE EXCEL FILE.
wsmass <- c("Region", "Landuse","Treatment")
#NB! NEEDED TO INSTALL ACTIVEPERL: https://www.activestate.com/activeperl/downloads, TO BE ABLE TO READ THE EXCEL FILE.
wsmass <- c("wsdata$Region","wsdata$Landuse", "wsdata$Treatment", "wsdata$Littertype","wsdata$Ashed.initial.corrected.weight..tea.only..g.","wsdata$Ashed.final.corrected.weight..tea.only..g.","wsdata$Massloss..g.")
wsmass <- wsdata[wsmassvariables]
#NB! NEEDED TO INSTALL ACTIVEPERL: https://www.activestate.com/activeperl/downloads, TO BE ABLE TO READ THE EXCEL FILE.
wsmassvariables <- c("wsdata$Region","wsdata$Landuse", "wsdata$Treatment", "wsdata$Littertype","wsdata$Ashed.initial.corrected.weight..tea.only..g.","wsdata$Ashed.final.corrected.weight..tea.only..g.","wsdata$Massloss..g.")
wsmass <- wsdata[wsmassvariables]
wsmass <- wsdata[wsmassvariables,]
head(wsmass)
head(wsdata)
wsmassvariables <- c("wsdata$Region","wsdata$Landuse", "wsdata$Treatment", "wsdata$Littertype","wsdata$Ashed.initial.corrected.weight..tea.only..g.","wsdata$Ashed.final.corrected.weight..tea.only..g.","wsdata$Massloss..g.")
wsmass <- wsdata[wsmassvariables,]
head(wsmass)
wsmass <- wsdata[wsmassvariables]
wsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
wsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
wsmass <- wsdata[wsmassvariables]
head(wsmass)
View(wsmass)
View(wsmass)
View(wsmass)
dsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
dsmass <- dsdata[dsmassvariables]
dsmass <- dsdata[dsmassvariables,]
wsmass <- wsdata[wsmassvariables,]
head(dsmass)
wsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
wsmass <- wsdata[wsmassvariables]
dsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
dsmass <- dsdata[dsmassvariables]
head(dsmass)
dsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
dsmass <- dsdata[dsmassvariables]
setwd("C:/Users/ansun/Google Drive/Skole/Master/Data/AfricanBioServices-Vegetation-and-soils/Termites")
wsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
dsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=2) #Dryseason data
setwd("C:/Users/ansun/Google Drive/Skole/Master/Data/AfricanBioServices-Vegetation-and-soils/Termites")
wsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=1) #Wetseason data
dsdata <- read.xls("Main_dataset_MSc_AndSun.xlsx", sheet=2) #Dryseason data
#NB! NEEDED TO INSTALL ACTIVEPERL: https://www.activestate.com/activeperl/downloads, TO BE ABLE TO READ THE EXCEL FILE.
head(wsdata)
#NB! NEEDED TO INSTALL ACTIVEPERL: https://www.activestate.com/activeperl/downloads, TO BE ABLE TO READ THE EXCEL FILE.
head(wsdata)
head(dsdata)
wsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
wsmass <- wsdata[wsmassvariables]
dsmassvariables <- c("Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
dsmass <- dsdata[dsmassvariables]
head(dsmass)
rbind(wsmass,dsmass)
fulldata<-rbind(wsmass,dsmass)
View(fulldata)
View(fulldata)
fulldata<-rbind(wsmass,dsmass)
#NB! NEEDED TO INSTALL ACTIVEPERL: https://www.activestate.com/activeperl/downloads, TO BE ABLE TO READ THE EXCEL FILE.
head(wsdata)
head(dsdata)
wsmassvariables <- c("Season","Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
wsmass <- wsdata[wsmassvariables]
dsmassvariables <- c("Season","Region","Landuse", "Treatment", "Littertype","Ashed.initial.corrected.weight..tea.only..g.","Ashed.final.corrected.weight..tea.only..g.","Massloss..g.")
dsmass <- dsdata[dsmassvariables]
head(dsmass)
fulldata<-rbind(wsmass,dsmass)
View(fulldata)
View(fulldata)
# Outliers?
plot(fulldata)
# Outliers?
dotchart(fulldata$Ashed.final.corrected.weight..tea.only..g. # One very large outlier for the final weight subsample percantage
# Outliers?
dotchart(fulldata$Ashed.final.corrected.weight..tea.only..g.) # One very large outlier for the final weight subsample percantage
# Outliers?
dotchart(fulldata$Ashed.final.corrected.weight..tea.only..g.) # One very large outlier for the final weight subsample percantage
plot(fulldata$Ashed.final.corrected.weight..tea.only..g.)
# Checking for outliers
dotchart(fulldata$Ashed.final.corrected.weight..tea.only..g.)
plot(fulldata$Ashed.final.corrected.weight..tea.only..g.)
identify(fulldata$Ashed.final.corrected.weight..tea.only..g)
fulldata[289,]
fulldata[772,]
identify(fulldata$Ashed.final.corrected.weight..tea.only..g)
fulldata[311,]
identify(fulldata$Ashed.final.corrected.weight..tea.only..g)
fulldata[301,]
fulldata <- [fulldata!=289,]
fulldata <- fulldata[fulldata!=289,]
fulldata<-rbind(wsmass,dsmass)
fulldata <- fulldata[-c(289,772),]
# Checking for outliers
dotchart(fulldata$Ashed.final.corrected.weight..tea.only..g.)
plot(fulldata$Ashed.final.corrected.weight..tea.only..g.)
identify(fulldata$Ashed.final.corrected.weight..tea.only..g)
fulldata[141,]
wsdata<- read.csv('Termites/Wetseason.csv', sep=';',dec=',')#Wetseason data
library(lattice)
library(MASS)
library(ggplot2)
library(lme4)
library(glmmTMB)
library(glmmADMB)
wsdata<- read.csv('Termites/Wetseason.csv', sep=';',dec='.')#Wetseason data
dsdata <- read.csv("Termites/Dryseason.csv", sep=";",dec=".")#Dryseason data
####Loading data Anders Sundsdal MSc####
rm(list=ls())
library(lattice)
library(MASS)
library(ggplot2)
library(lme4)
library(glmmTMB)
wsdata<- read.csv('Termites/Main & CG experiment/Wetseason.csv', sep=';',dec='.')#Wetseason data
dsdata <- read.csv("Termites/Main & CG experiment/Dryseason.csv", sep=";",dec=".")#Dryseason data
head(wsdata)
head(dsdata)
fulldata<-rbind(wsdata,dsdata)
fulldata$Massloss.per <- (1-fulldata$Ashed.final.corrected.weight..tea.only..g./fulldata$Ashed.initial.corrected.weight..tea.only..g.)*100
####Data exploration####
# A Missing values?
# B Outliers in Y / Outliers in X
# C Collinearity X
# D Relationships Y vs X
# E Spatial/temporal aspects of sampling design (not relevant here)
# F Interactions (is the quality of the data good enough to include them?)
# G Zero inflation Y
# H Are categorical covariates balanced?
#### Outliers####
#Ashed final weight
dotchart(fulldata$Ashed.final.corrected.weight..tea.only..g.)
plot(fulldata$Ashed.final.corrected.weight..tea.only..g.)
#identify(fulldata$Ashed.final.corrected.weight..tea.only..g)
#Outlier in ashed data % (should be between 0-100):
dotchart(fulldata$Ashed.final.subsample.percentage.....) # One very large outlier for the final weight subsample percantage
plot(fulldata$Ashed.final.subsample.percentage.....)
#identify(fulldata$Ashed.final.subsample.percentage.....) #[1] 516
#Checking outliers in initial and final weights:
#Inital weight:
dotchart(fulldata$Initial.weight.including.bag..cord.and.label..g.)
plot(fulldata$Initial.weight.including.bag..cord.and.label..g.)
#identify(fulldata$Initial.weight.tea.only..g.)
#106 and 1611 looks wierd
fulldata[106,] # 1,191 may be too low for initial weight! Have to check for speling mistake
fulldata[1611,] #0,229 is too low for initial weight! Have to check for speling mistake
#No need to remove these as long as the difference in mass loss make sense.
#Checking for massloss outlier
dotchart(fulldata$Massloss..g. ) #
plot(fulldata$Massloss..g.)
#identify(fulldata$Massloss..g.)
fulldata[289,] # Minus massloss check this code: R414
fulldata[1614,] # Minus mass loss check this code: R275
#Removing these for now: 289 and 1614 rows:
fulldata <- fulldata[-c(289, 1614), ]
#Checkig outliers in temperature and moisture:
dotchart(fulldata$Temperature..C.) #Looks ok
plot(fulldata$Temperature..C.)
#identify(fulldata$Temperature..C.)
dotchart(fulldata$Moisture..) #Looks ok
plot(fulldata$Moisture..)
#####B Collinearity X####
MyVar<-c("Massloss..g.","rain.sum..mm.","CLAY..","SILT..",
"SAND..","OC..","Moisture..","Temperature..C.")
pairs(fulldata[,MyVar]) #Not sure whats up here...
plot(fulldata$Moisture..,fulldata$Temperature..C.)
####Housekeeping # Ensuring factors are factors####
names(fulldata)
fulldata$fsite<-as.factor(fulldata$Site)
fulldata$fregion<-as.factor(fulldata$Region)
fulldata$fseason<-as.factor(fulldata$Season)
fulldata$flanduse<-as.factor(fulldata$Landuse)
fulldata$ftreatment<-as.factor(fulldata$Treatment)
fulldata$flittertype<-as.factor(fulldata$Littertype)
fulldata$fplot.id<-as.factor(fulldata$Plot) # 220 plots # correct
fulldata$fteabag_code<-as.factor(fulldata$Teabag.code) # 879 teabags - missing 1 teabag (Maybe one is a duplicate?)
fulldata$fsoil.class<-as.factor(fulldata$Soil.Class)
fulldata$fmound_type<-as.factor(fulldata$Mound.type)
fulldata$ftree_ants<-as.factor(fulldata$Tree.with.ants)
fulldata$fblock<-as.factor(fulldata$Block)
fulldata$fblockcode<-as.factor(fulldata$Blockcode)
fulldata$fholes<-as.factor(fulldata$Sign.of.hole.s.)
fulldata$fcheeting<-as.factor(fulldata$Sign.of.termite.cheeting)
fulldata$froots<-as.factor(fulldata$Sign.of.roots)
names(fulldata)
#### Seperate the experiments ####
FulldataCG<-fulldata[fulldata$Experiment=="CG",] # Only commongarden data
FulldataCG<-droplevels(FulldataCG) # Ensure factor level "Main" is removed.
FulldataMain<-fulldata[fulldata$Experiment!="CG",] #Only landuse experiement data
FulldataMain<-droplevels(FulldataMain)# Ensure factor level common garden dropped
levels(fulldata$Landuse) # All levels incl. common garden
levels(FulldataMain$Landuse)
levels(FulldataCG$Landuse)
se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))# Function for Standard Error
# Main experiment means and standard error (exclude blocks) # From Stu: Need to seperate out Agricutlure in Makao and Mwantimba(WHY?)
names(FulldataMain)
#Creating means by landuse (excluding blocks)
FulldataMainmean1<-aggregate(Massloss.per~fseason+fregion+ftreatment+flittertype+flanduse, FulldataMain, mean)
FulldataMainse1 <-aggregate(Massloss.per~fseason+fregion+ftreatment+flittertype+flanduse, FulldataMain, se)
#Creating new column with the SE in the Mainmean dataset.
FulldataMainmean1$SE <- FulldataMainse1$Massloss.per
#### Graphing: Main experiment - decomposition across landuse ####
# Fill by termite * landuse = empty = absence, filled = prescence
FulldataMainmean1$tea.hole<-as.factor(with(FulldataMainmean1, paste(flittertype, ftreatment, sep=" ")))
levels(FulldataMainmean1$tea.hole)
#levels(FulldataMainmean$fregion)<-c("Dry region","Wet region")
FulldataMainmean1$fregion <- as.factor(FulldataMainmean1$fregion)#Need to "re-factor" the region as levels are changed fro 3 to 2 in landuse experiment (only wet and dry).
levels(FulldataMainmean1$fregion)
levels(FulldataMainmean1$fseason)
Mainexp <- FulldataMainmean1
#Now, ready for graphing: Main experiment massloss against landuse
#Want to reorder tea.hole to have a nicer legend:
Mainexp$tea.hole <- ordered(Mainexp$tea.hole, levels=c("Green Exclosed", "Rooibos Exclosed","Green Open","Rooibos Open"))
levels(Mainexp$tea.hole)
colnames(Mainexp)[1]<-"Season"
colnames(Mainexp)[2]<-"Region"
names(Mainexp)
####Point plot Main exp####
# Mainp <- ggplot(data=Mainexp, aes(x=flanduse,y=Massloss.per,
#                                   ymin=(Massloss.per-SE),
#                                   ymax=(Massloss.per+SE),
#                                   fill = tea.hole,
#                                   color = flittertype,
#                                   shape=flanduse)
#                 )+
#
#   geom_errorbar(width=.5,lwd=1,position=position_dodge(width=.35),show.legend=F) +
#   geom_point(size=5,stroke=1.2,position=position_dodge(width=.35),show.legend=T)+
#   facet_grid(Region ~ Season, scale ="fixed", labeller=labeller(Region = c(`Dry`= "Dry Region", `Wet`="Wet Region"),
#                                                                 Season = c(`Wet`= "Wet Season", `Dry`="Dry Season")))+
#   scale_color_manual(values=c("green4", "orangered3"))+
#   scale_fill_manual(values=c("green4","orangered3","white","white"))+
#   scale_shape_manual(values=c(21,23,24))+
#   guides(fill = guide_legend(override.aes=list(shape=25, color=c("green4","orangered3","green4","orangered3"))),color=F)+
#   scale_y_continuous(limits = c(5,95), expand = c(0,0),breaks = c(5,20,40,60,80), labels = c(0,20,40,60,80))+
#   xlab("Land-use")+
#   ylab("Mass loss (%)"
#        )+
#
#   theme(rect = element_rect(fill ="transparent")
#         ,panel.background=element_rect(fill="transparent")
#         ,plot.background=element_rect(fill="transparent",colour=NA)
#         ,panel.grid.major = element_blank()
#         ,panel.grid.minor = element_blank()
#         ,panel.border = element_blank()
#         ,panel.grid.major.x = element_blank()
#         ,panel.grid.major.y = element_blank()
#         ,axis.text=element_text(size=12,color="black")
#         ,axis.title.y=element_text(size=14,color="black")
#         ,axis.title.x=element_text(size=14,vjust=-.4,color="black")
#         ,axis.text.x = element_text(size=10,color="black",
#                                     margin=margin(2.5,2.5,2.5,2.5,"mm"))
#         ,axis.text.y = element_text(margin=margin(2.5,2.5,2.5,2.5,"mm"))
#         ,axis.ticks.length=unit(-1.5, "mm")
#         #,axis.line.y = element_blank()
#         ,axis.line.x = element_blank()
#         ,plot.margin = unit(c(8,50,5,5), "mm")
#         ,strip.background = element_rect(fill="transparent",colour=NA)
#         ,strip.text.x = element_text(size = 14,colour = "black")
#         ,strip.text.y = element_text(size = 14,colour = "black")
#         ,panel.spacing = unit(1, "lines")
#         ,legend.background = element_rect(fill = "transparent")
#         ,legend.title=element_blank()
#         ,legend.position = c(1.3,0.5)
#         ,legend.spacing.y = unit(-0.8, "mm")
#         ,legend.key.height=unit(7.5,"mm")
#         ,legend.key.width=unit(7.5,"mm")
#         ,legend.key = element_rect(colour = NA, fill = NA)
#         ,legend.key.size = unit(7,"mm")
#         ,legend.text=element_text(size=12,color="black")
#
#         )+
#
#   annotate(geom = "segment", x = -Inf, xend = -Inf, y = -Inf, yend = Inf, size = 1.15) +
#   annotate(geom = "segment", x = -Inf, xend = Inf, y = -Inf, yend = -Inf, size = 1.15) +
#   annotate(geom = "segment", x = -Inf, xend = -Inf, y = -Inf, yend = Inf, size = 1.15) +
#   annotate(geom = "segment", x = -Inf, xend = Inf, y = -Inf, yend = -Inf, size = 1.15)
#
# Mainp
#ggsave("Termites//Main & CG experiment/Mainexp.png",
#      width= 20, height = 15,units ="cm",bg ="transparent",
#     dpi = 600, limitsize = TRUE)
####Stacked bar plot Main exp####
#Creating 4 dataframes with each of the treatments and littertype in each.
SummaryGreenop<-Mainexp[Mainexp$tea.hole=="Green Open",] # Only Green Open data
SummaryGreenex<-Mainexp[Mainexp$tea.hole=="Green Exclosed",] # Only Green Open data
SummaryRedop<-Mainexp[Mainexp$tea.hole=="Rooibos Open",] # Only Green Open data
SummaryRedex<-Mainexp[Mainexp$tea.hole=="Rooibos Exclosed",] # Only Green Open data
#Creating dataframe with termite and microbe effect variable (Open-exclosed):
SummaryGTM <- SummaryGreenop
SummaryRTM <- SummaryRedop
SummaryGTM <- SummaryGTM[-c(3,4,6,7,8)]
SummaryRTM <- SummaryRTM[-c(3,4,6,7,8)]
SummaryGTM1 <- SummaryGTM
SummaryGTM2 <- SummaryGTM
SummaryRTM1 <- SummaryRTM
SummaryRTM2 <- SummaryRTM
SummaryGTM1$A <- abs(SummaryGreenop$Massloss.per - SummaryGreenex$Massloss.per)#Termitegreen
SummaryRTM1$B <- abs(SummaryRedop$Massloss.per - SummaryRedex$Massloss.per)#Termitered
SummaryGTM2$A<-SummaryGreenex$Massloss.per#microbegreen
SummaryRTM2$B<-SummaryRedex$Massloss.per#Microbered
#Creating  two columns for green and red tea with an accompanying column of to levels (microbe/termite):
SummaryGTM <- rbind(SummaryGTM1,SummaryGTM2)
colnames(SummaryGTM)<-c("Season","Region","Landuse","Massloss.per")
SummaryGTM$Decomposer <- c("Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite",
"Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe")
SummaryGTM$Littertype <- c("Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile",
"Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile","Labile")
SummaryRTM <- rbind(SummaryRTM1,SummaryRTM2)
colnames(SummaryRTM)<-c("Season","Region","Landuse","Massloss.per")
SummaryRTM$Decomposer <- c("Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite","Termite",
"Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe","Microbe")
SummaryRTM$Littertype <- c("Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant",
"Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant","Recalcitrant")
SummaryGRTM <- rbind(SummaryGTM,SummaryRTM)
SummaryGRTM$Decomposer<-as.factor(SummaryGRTM$Decomposer)
levels(SummaryGRTM$Decomposer)
SummaryGRTM$Littertype <-as.factor(SummaryGRTM$Littertype)
levels(SummaryGRTM$Littertype)
SummaryGRTM$LD<-as.factor(with(SummaryGRTM, paste(Littertype, Decomposer, sep="")))
levels(SummaryGRTM$LD)
#levels(SummaryGRTM$LD) <- list(G="LabileMicrobe", G="LabileTermite", R="RecalcitrantMicrobe", R="RecalcitrantTermite")
#Plotting
MainexpBP <- ggplot(data=SummaryGRTM, aes(x=Littertype,y=Massloss.per,fill=Decomposer))+
geom_bar(stat="identity", position="stack",width=0.9)+
facet_wrap(Region~Landuse+Season,nrow=2) +
# scale_color_manual(values=c("Green","orangered3")) +
scale_fill_manual(values=c("grey","black","black","black")                         #
)
MainexpBP
